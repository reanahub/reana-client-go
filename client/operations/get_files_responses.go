// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetFilesReader is a Reader for the GetFiles structure.
type GetFilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFilesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFilesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFilesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFilesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFilesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFilesOK creates a GetFilesOK with default headers values
func NewGetFilesOK() *GetFilesOK {
	return &GetFilesOK{}
}

/* GetFilesOK describes a response with status code 200, with default header values.

Requests succeeded. The list of files has been retrieved.
*/
type GetFilesOK struct {
	Payload *GetFilesOKBody
}

func (o *GetFilesOK) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/workspace][%d] getFilesOK  %+v", 200, o.Payload)
}
func (o *GetFilesOK) GetPayload() *GetFilesOKBody {
	return o.Payload
}

func (o *GetFilesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetFilesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFilesBadRequest creates a GetFilesBadRequest with default headers values
func NewGetFilesBadRequest() *GetFilesBadRequest {
	return &GetFilesBadRequest{}
}

/* GetFilesBadRequest describes a response with status code 400, with default header values.

Request failed. The incoming payload seems malformed.
*/
type GetFilesBadRequest struct {
}

func (o *GetFilesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/workspace][%d] getFilesBadRequest ", 400)
}

func (o *GetFilesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFilesForbidden creates a GetFilesForbidden with default headers values
func NewGetFilesForbidden() *GetFilesForbidden {
	return &GetFilesForbidden{}
}

/* GetFilesForbidden describes a response with status code 403, with default header values.

Request failed. User is not allowed to access workflow.
*/
type GetFilesForbidden struct {
}

func (o *GetFilesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/workspace][%d] getFilesForbidden ", 403)
}

func (o *GetFilesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFilesNotFound creates a GetFilesNotFound with default headers values
func NewGetFilesNotFound() *GetFilesNotFound {
	return &GetFilesNotFound{}
}

/* GetFilesNotFound describes a response with status code 404, with default header values.

Request failed. Analysis does not exist.
*/
type GetFilesNotFound struct {
}

func (o *GetFilesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/workspace][%d] getFilesNotFound ", 404)
}

func (o *GetFilesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFilesInternalServerError creates a GetFilesInternalServerError with default headers values
func NewGetFilesInternalServerError() *GetFilesInternalServerError {
	return &GetFilesInternalServerError{}
}

/* GetFilesInternalServerError describes a response with status code 500, with default header values.

Request failed. Internal server error.
*/
type GetFilesInternalServerError struct {
}

func (o *GetFilesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/workspace][%d] getFilesInternalServerError ", 500)
}

func (o *GetFilesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetFilesOKBody get files o k body
swagger:model GetFilesOKBody
*/
type GetFilesOKBody struct {

	// items
	Items []*GetFilesOKBodyItemsItems0 `json:"items"`

	// total
	Total int64 `json:"total,omitempty"`
}

// Validate validates this get files o k body
func (o *GetFilesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFilesOKBody) validateItems(formats strfmt.Registry) error {
	if swag.IsZero(o.Items) { // not required
		return nil
	}

	for i := 0; i < len(o.Items); i++ {
		if swag.IsZero(o.Items[i]) { // not required
			continue
		}

		if o.Items[i] != nil {
			if err := o.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFilesOK" + "." + "items" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getFilesOK" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get files o k body based on the context it is used
func (o *GetFilesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateItems(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFilesOKBody) contextValidateItems(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Items); i++ {

		if o.Items[i] != nil {
			if err := o.Items[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFilesOK" + "." + "items" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getFilesOK" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetFilesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFilesOKBody) UnmarshalBinary(b []byte) error {
	var res GetFilesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFilesOKBodyItemsItems0 get files o k body items items0
swagger:model GetFilesOKBodyItemsItems0
*/
type GetFilesOKBodyItemsItems0 struct {

	// last modified
	LastModified string `json:"last-modified,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// size
	Size *GetFilesOKBodyItemsItems0Size `json:"size,omitempty"`
}

// Validate validates this get files o k body items items0
func (o *GetFilesOKBodyItemsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFilesOKBodyItemsItems0) validateSize(formats strfmt.Registry) error {
	if swag.IsZero(o.Size) { // not required
		return nil
	}

	if o.Size != nil {
		if err := o.Size.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("size")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("size")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get files o k body items items0 based on the context it is used
func (o *GetFilesOKBodyItemsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateSize(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFilesOKBodyItemsItems0) contextValidateSize(ctx context.Context, formats strfmt.Registry) error {

	if o.Size != nil {
		if err := o.Size.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("size")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("size")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetFilesOKBodyItemsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFilesOKBodyItemsItems0) UnmarshalBinary(b []byte) error {
	var res GetFilesOKBodyItemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFilesOKBodyItemsItems0Size get files o k body items items0 size
swagger:model GetFilesOKBodyItemsItems0Size
*/
type GetFilesOKBodyItemsItems0Size struct {

	// human readable
	HumanReadable string `json:"human_readable,omitempty"`

	// raw
	Raw int64 `json:"raw,omitempty"`
}

// Validate validates this get files o k body items items0 size
func (o *GetFilesOKBodyItemsItems0Size) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get files o k body items items0 size based on context it is used
func (o *GetFilesOKBodyItemsItems0Size) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetFilesOKBodyItemsItems0Size) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFilesOKBodyItemsItems0Size) UnmarshalBinary(b []byte) error {
	var res GetFilesOKBodyItemsItems0Size
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
