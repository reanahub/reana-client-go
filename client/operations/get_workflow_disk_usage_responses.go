// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetWorkflowDiskUsageReader is a Reader for the GetWorkflowDiskUsage structure.
type GetWorkflowDiskUsageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowDiskUsageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowDiskUsageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWorkflowDiskUsageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWorkflowDiskUsageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkflowDiskUsageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWorkflowDiskUsageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetWorkflowDiskUsageOK creates a GetWorkflowDiskUsageOK with default headers values
func NewGetWorkflowDiskUsageOK() *GetWorkflowDiskUsageOK {
	return &GetWorkflowDiskUsageOK{}
}

/* GetWorkflowDiskUsageOK describes a response with status code 200, with default header values.

Request succeeded. Info about the disk usage is returned.
*/
type GetWorkflowDiskUsageOK struct {
	Payload *GetWorkflowDiskUsageOKBody
}

func (o *GetWorkflowDiskUsageOK) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/disk_usage][%d] getWorkflowDiskUsageOK  %+v", 200, o.Payload)
}
func (o *GetWorkflowDiskUsageOK) GetPayload() *GetWorkflowDiskUsageOKBody {
	return o.Payload
}

func (o *GetWorkflowDiskUsageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetWorkflowDiskUsageOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowDiskUsageBadRequest creates a GetWorkflowDiskUsageBadRequest with default headers values
func NewGetWorkflowDiskUsageBadRequest() *GetWorkflowDiskUsageBadRequest {
	return &GetWorkflowDiskUsageBadRequest{}
}

/* GetWorkflowDiskUsageBadRequest describes a response with status code 400, with default header values.

Request failed. The incoming data specification seems malformed.
*/
type GetWorkflowDiskUsageBadRequest struct {
}

func (o *GetWorkflowDiskUsageBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/disk_usage][%d] getWorkflowDiskUsageBadRequest ", 400)
}

func (o *GetWorkflowDiskUsageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowDiskUsageForbidden creates a GetWorkflowDiskUsageForbidden with default headers values
func NewGetWorkflowDiskUsageForbidden() *GetWorkflowDiskUsageForbidden {
	return &GetWorkflowDiskUsageForbidden{}
}

/* GetWorkflowDiskUsageForbidden describes a response with status code 403, with default header values.

Request failed. User is not allowed to access workflow.
*/
type GetWorkflowDiskUsageForbidden struct {
}

func (o *GetWorkflowDiskUsageForbidden) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/disk_usage][%d] getWorkflowDiskUsageForbidden ", 403)
}

func (o *GetWorkflowDiskUsageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowDiskUsageNotFound creates a GetWorkflowDiskUsageNotFound with default headers values
func NewGetWorkflowDiskUsageNotFound() *GetWorkflowDiskUsageNotFound {
	return &GetWorkflowDiskUsageNotFound{}
}

/* GetWorkflowDiskUsageNotFound describes a response with status code 404, with default header values.

Request failed. User does not exist.
*/
type GetWorkflowDiskUsageNotFound struct {
}

func (o *GetWorkflowDiskUsageNotFound) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/disk_usage][%d] getWorkflowDiskUsageNotFound ", 404)
}

func (o *GetWorkflowDiskUsageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowDiskUsageInternalServerError creates a GetWorkflowDiskUsageInternalServerError with default headers values
func NewGetWorkflowDiskUsageInternalServerError() *GetWorkflowDiskUsageInternalServerError {
	return &GetWorkflowDiskUsageInternalServerError{}
}

/* GetWorkflowDiskUsageInternalServerError describes a response with status code 500, with default header values.

Request failed. Internal controller error.
*/
type GetWorkflowDiskUsageInternalServerError struct {
}

func (o *GetWorkflowDiskUsageInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/workflows/{workflow_id_or_name}/disk_usage][%d] getWorkflowDiskUsageInternalServerError ", 500)
}

func (o *GetWorkflowDiskUsageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetWorkflowDiskUsageBody get workflow disk usage body
swagger:model GetWorkflowDiskUsageBody
*/
type GetWorkflowDiskUsageBody struct {

	// search
	Search string `json:"search,omitempty"`

	// summarize
	Summarize bool `json:"summarize,omitempty"`
}

// Validate validates this get workflow disk usage body
func (o *GetWorkflowDiskUsageBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get workflow disk usage body based on context it is used
func (o *GetWorkflowDiskUsageBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetWorkflowDiskUsageBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetWorkflowDiskUsageBody) UnmarshalBinary(b []byte) error {
	var res GetWorkflowDiskUsageBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetWorkflowDiskUsageOKBody get workflow disk usage o k body
swagger:model GetWorkflowDiskUsageOKBody
*/
type GetWorkflowDiskUsageOKBody struct {

	// disk usage info
	DiskUsageInfo []*GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0 `json:"disk_usage_info"`

	// user
	User string `json:"user,omitempty"`

	// workflow id
	WorkflowID string `json:"workflow_id,omitempty"`

	// workflow name
	WorkflowName string `json:"workflow_name,omitempty"`
}

// Validate validates this get workflow disk usage o k body
func (o *GetWorkflowDiskUsageOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDiskUsageInfo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetWorkflowDiskUsageOKBody) validateDiskUsageInfo(formats strfmt.Registry) error {
	if swag.IsZero(o.DiskUsageInfo) { // not required
		return nil
	}

	for i := 0; i < len(o.DiskUsageInfo); i++ {
		if swag.IsZero(o.DiskUsageInfo[i]) { // not required
			continue
		}

		if o.DiskUsageInfo[i] != nil {
			if err := o.DiskUsageInfo[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getWorkflowDiskUsageOK" + "." + "disk_usage_info" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getWorkflowDiskUsageOK" + "." + "disk_usage_info" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get workflow disk usage o k body based on the context it is used
func (o *GetWorkflowDiskUsageOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDiskUsageInfo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetWorkflowDiskUsageOKBody) contextValidateDiskUsageInfo(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.DiskUsageInfo); i++ {

		if o.DiskUsageInfo[i] != nil {
			if err := o.DiskUsageInfo[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getWorkflowDiskUsageOK" + "." + "disk_usage_info" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getWorkflowDiskUsageOK" + "." + "disk_usage_info" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetWorkflowDiskUsageOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetWorkflowDiskUsageOKBody) UnmarshalBinary(b []byte) error {
	var res GetWorkflowDiskUsageOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0 get workflow disk usage o k body disk usage info items0
swagger:model GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0
*/
type GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0 struct {

	// name
	Name string `json:"name,omitempty"`

	// size
	Size *GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0Size `json:"size,omitempty"`
}

// Validate validates this get workflow disk usage o k body disk usage info items0
func (o *GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0) validateSize(formats strfmt.Registry) error {
	if swag.IsZero(o.Size) { // not required
		return nil
	}

	if o.Size != nil {
		if err := o.Size.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("size")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("size")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get workflow disk usage o k body disk usage info items0 based on the context it is used
func (o *GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateSize(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0) contextValidateSize(ctx context.Context, formats strfmt.Registry) error {

	if o.Size != nil {
		if err := o.Size.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("size")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("size")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0) UnmarshalBinary(b []byte) error {
	var res GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0Size get workflow disk usage o k body disk usage info items0 size
swagger:model GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0Size
*/
type GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0Size struct {

	// human readable
	HumanReadable string `json:"human_readable,omitempty"`

	// raw
	Raw int64 `json:"raw,omitempty"`
}

// Validate validates this get workflow disk usage o k body disk usage info items0 size
func (o *GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0Size) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get workflow disk usage o k body disk usage info items0 size based on context it is used
func (o *GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0Size) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0Size) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0Size) UnmarshalBinary(b []byte) error {
	var res GetWorkflowDiskUsageOKBodyDiskUsageInfoItems0Size
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
